The Google Charts API:

Using a Google Spreadsheet as a DataSource:

Visualizations built on the Google Visualization API can use any accessible Google Spreadsheet as a data source. 
Google Spreadsheets support the Google Visualization API query language for sorting and filtering data.

Any selection of cells within a Google Spreadsheet is a valid data source for a visualization.

Using Google Spreadsheets as a data source, use the URL of the sheet and cells that hold the data that you want. Specify that URL as the data source for your visualization in your visualization's user interface.

Sending a Request

The Query object is instantiated with the URL of the Datasource. The URL indicates what data is being requested, in a syntax understood by that data source.Sending method as an optional second parameter in the Query object constructor can be specified.A Query language string to sort or filter the results, and then send the request can be optionally added. The query language is a SQL language variant.The query is sent, specifying a callback handler that will be called when the response is received.

Processing the Response

The response handler function is when the request returns. The parameter passed in to your response handler function is of type google.visualization.QueryResponse. If the request is successful, the response contains a data table (class google.visualization.DataTable). If the request failed, the response contains information about the error, and no DataTable.


Controls and Dashboards:

Dashboards provide a simple way to organize together and manage multiple charts that share the same underlying data. 
Dashboard instances receive a DataTable containing the data to visualize and take care of drawing and distributing the data to all the charts that are part of the dashboard.

Controls are user interface widgets (category pickers, range sliders, autocompleters) user interacts with in order to drive the data managed by a dashboard and the charts that are part of it.ControlWrapper added to instances to a dashboard, where they behave like pipes and valves in a plumbing system. They collect user input and use the information to decide which of the data the dashboard is managing should be made available to the charts that are part of it.


